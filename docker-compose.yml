version: '3.9'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_started
    networks:
      - backend
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - PORT=${PORT}
      - DATABASE_URL=${DATABASE_URL}
    ports:
      - ${PORT}:${PORT}
    volumes:
      - ./prisma:/usr/src/app/prisma
      - node_modules:/usr/src/app/node_modules
      - ./src:/usr/src/app/src
  postgres:
    build:
      context: ./src/prisma
      dockerfile: Dockerfile
    networks:
      - backend
    image: postgres:15.3
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}

volumes:
  node_modules:
  postgres:
networks:
  backend:
    driver: bridge
